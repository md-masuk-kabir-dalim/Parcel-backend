model PrivateMessage {
    id             String       @id @default(uuid())
    senderId       String
    receiverId     String
    content        String?
    imageUrl       String?
    audioURL       String?
    conversationId String
    read           Boolean      @default(false)
    sender         User?        @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
    receiver       User?        @relation("ReceivedMessages", fields: [receiverId], references: [id], onDelete: Cascade)
    conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @updatedAt

    @@index([senderId])
    @@index([receiverId])
    @@index([conversationId])
    @@index([createdAt])
    @@index([updatedAt])
    @@index([read])
    @@map("private_message")
}

model Conversation {
    id              String             @id @default(uuid())
    user1Id         String
    user2Id         String
    lastMessage     String?
    user1           User?              @relation("User1Conversion", fields: [user1Id], references: [id], onDelete: Cascade)
    user2           User?              @relation("User2Conversion", fields: [user2Id], references: [id], onDelete: Cascade)
    privateMessages PrivateMessage[]
    status          ConversationStatus @default(ACTIVE)
    createdAt       DateTime           @default(now())
    updatedAt       DateTime           @updatedAt

    @@unique([user1Id, user2Id])
    @@index([status])
    @@index([createdAt])
    @@index([updatedAt])
    @@map("conversations")
}

enum ConversationStatus {
    ACTIVE
    DEACTIVATE
}
